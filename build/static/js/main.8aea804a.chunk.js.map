{"version":3,"sources":["views/404/style.module.scss","redux/actionsTypes/games.js","redux/reducers/games.js","redux/actionsTypes/general.js","redux/reducers/general.js","redux/reducers/index.js","redux/store/store.js","helpers/history.js","containers/pageWrapper/PageWrapper.js","views/404/404.jsx","helpers/axios.js","helpers/api.js","services/FinderService.js","redux/actions/games.js","components/finder/Finder.jsx","redux/actions/general.js","components/showcase/Showcase.jsx","components/pagination/Pagination.jsx","views/searchPage/SearchPage.jsx","App.js","serviceWorker.js","index.js","views/searchPage/style.module.scss"],"names":["module","exports","GET_ALL_GAMES_REQUEST","GET_ALL_GAMES_SUCCESS","GET_ALL_GAMES_FAILED","SET_FAVORITE","UNSET_FAVORITE","SHOW_FULL_GAME_INFO","CLOSE_FULL_GAME_INFO","initialState","parsedGamesList","favoriteGames","gamesLoading","gamesLoaded","allGamesCount","currentSelected","isFullInfoShown","SET_FIND_TEXT","currentlyFinding","rootReducer","combineReducers","games","state","action","newState","type","console","log","payload","results","count","filter","item","id","push","generals","store","createStore","composeWithDevTools","applyMiddleware","thunk","history","createBrowserHistory","connect","auth","props","useEffect","title","document","notAuth","accessToken","to","Auth","Component","component","NotFound","className","style","React","axios","interceptors","response","use","error","Promise","reject","api","url","a","async","method","data","get","post","put","delete","patch","options","query","finded","JSON","parse","showFullGameInfo","game","getAllGames","dispatch","FinderService","findAll","then","catch","err","Search","Input","Finder","onSearch","value","setFindText","search","page_size","placeholder","this","mapDispatchToProps","text","Meta","Card","Showcase","listenResizeEvent","setState","columns","Math","ceil","WindowSize","width","handleOk","closeFullGameInfo","window","addEventListener","removeEventListener","Fragment","loading","grid","gutter","column","dataSource","source","renderItem","Item","key","hoverable","overflow","cover","alt","src","background_image","height","onClick","name","description","released","display","alignItems","justifyContent","indexOf","unsetFavorite","setFavorite","theme","visible","onOk","onCancel","footer","rating","rating_top","metacritic","platforms","map","platform","genres","autoplay","dotPosition","short_screenshots","image","undefined","onPageChange","page","defaultCurrent","onChange","pageSize","total","marginBottom","Header","Layout","Content","Sider","SubMenu","Menu","SearchPage","container","breakpoint","collapsedWidth","mode","defaultSelectedKeys","header","finder","margin","Pagination","App","exact","path","render","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8aea804a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"style_title__eTV8V\"};","export const GET_ALL_GAMES_REQUEST = \"GET_ALL_GAMES_REQUEST\";\nexport const GET_ALL_GAMES_SUCCESS = \"GET_ALL_GAMES_SUCCESS\";\nexport const GET_ALL_GAMES_FAILED = \"GET_ALL_GAMES_FAILED\";\n\nexport const SET_FAVORITE = \"SET_FAVORITE\";\nexport const UNSET_FAVORITE = \"UNSET_FAVORITE\";\n\nexport const SHOW_FULL_GAME_INFO = \"SHOW_FULL_GAME_INFO\";\nexport const CLOSE_FULL_GAME_INFO = \"CLOSE_FULL_GAME_INFO\";\n","import {\n  GET_ALL_GAMES_FAILED,\n  GET_ALL_GAMES_SUCCESS,\n  GET_ALL_GAMES_REQUEST,\n  SET_FAVORITE,\n  UNSET_FAVORITE,\n  SHOW_FULL_GAME_INFO,\n  CLOSE_FULL_GAME_INFO\n} from \"../actionsTypes/games\";\n\nconst initialState = {\n  parsedGamesList: [],\n  favoriteGames: [],\n  gamesLoading: false,\n  gamesLoaded: false,\n  allGamesCount: null,\n  currentSelected: null,\n  isFullInfoShown: false\n};\n\nexport default function accountsReducer(state = initialState, action) {\n  const newState = { ...state };\n  switch (action.type) {\n    case GET_ALL_GAMES_REQUEST:\n      newState.gamesLoading = true;\n      newState.gamesLoaded = false;\n      return newState;\n\n    case GET_ALL_GAMES_FAILED:\n      newState.gamesLoading = false;\n      newState.gamesLoaded = false;\n      newState.parsedGamesList = [];\n      console.log(action.payload);\n      return newState;\n\n    case GET_ALL_GAMES_SUCCESS:\n      newState.gamesLoading = false;\n      newState.gamesLoaded = true;\n      newState.parsedGamesList = action.payload.results;\n      newState.allGamesCount = action.payload.count;\n      return newState;\n\n    case SET_FAVORITE:\n      newState.favoriteGames = state.favoriteGames.filter(\n        item => item.id !== action.payload.id\n      );\n      if (action.payload !== \"\") newState.favoriteGames.push(action.payload);\n      newState.isFullInfoShown = false;\n      return newState;\n\n    case SHOW_FULL_GAME_INFO:\n      newState.isFullInfoShown = true;\n      newState.currentSelected = action.payload;\n      return newState;\n\n    case CLOSE_FULL_GAME_INFO:\n      newState.isFullInfoShown = false;\n      return newState;\n\n    case UNSET_FAVORITE:\n      newState.favoriteGames = state.favoriteGames.filter(\n        item => item.id !== action.payload.id\n      );\n      return newState;\n\n    default:\n      return state;\n  }\n}\n","export const SET_FIND_TEXT = \"SET_FIND_TEXT\";\n","import { SET_FIND_TEXT } from \"../actionsTypes/general\";\n\nconst initialState = {\n  currentlyFinding: null\n};\n\nexport default function accountsReducer(state = initialState, action) {\n  const newState = { ...state };\n  switch (action.type) {\n    case SET_FIND_TEXT:\n      newState.currentlyFinding = action.payload;\n      return newState;\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport gamesReducer from \"./games\";\nimport generalReducer from \"./general\";\n\nexport const rootReducer = combineReducers({\n  games: gamesReducer,\n  generals: generalReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PageWrapper = props => {\n  useEffect(() => {\n    if (props.title) document.title = props.title;\n  });\n\n  if (props.notAuth && props.auth.accessToken) return <Redirect to={\"/\"} />;\n\n  if (props.Auth && !props.auth.accessToken) return <Redirect to={\"/login\"} />;\n\n  const Component = props.component;\n\n  return <Component {...props} />;\n};\n\nconst mapStateToProps = ({ auth }) => ({ auth });\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PageWrapper);\n","import React from \"react\";\nimport style from \"./style.module.scss\";\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div className={style.title}>\n        Хм... Я не уверен, что вы искали именно это...\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import axios from \"axios\";\n\n// axios.defaults.baseURL = \"http://localhost:8080/api/\";\n\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axios;\n","import axios from \"./axios\";\n\nconst api = async (url, method = \"GET\", data) => {\n  switch (method) {\n    case \"GET\":\n      return axios.get(url);\n    case \"POST\":\n      return axios.post(url, data);\n    case \"PUT\":\n      return axios.put(url, data);\n    case \"DELETE\":\n      return axios.delete(url);\n    case \"PATCH\":\n      return axios.patch(url, data);\n    case \"OPTIONS\":\n      return axios.options(url);\n    default:\n      return axios.get(url);\n  }\n};\nexport default api;\n","import api from \"../helpers/api\";\n\nclass FinderService {\n  async findAll(query) {\n    console.log(query);\n    var finded = await api(\"/api/findGame\", \"POST\", query);\n    return JSON.parse(finded.data);\n  }\n}\n\nexport default new FinderService();\n","import {\n  GET_ALL_GAMES_FAILED,\n  GET_ALL_GAMES_SUCCESS,\n  GET_ALL_GAMES_REQUEST,\n  SET_FAVORITE,\n  UNSET_FAVORITE,\n  SHOW_FULL_GAME_INFO,\n  CLOSE_FULL_GAME_INFO\n} from \"../actionsTypes/games\";\nimport FinderService from \"../../services/FinderService\";\n\nexport const setFavorite = game => ({\n  type: SET_FAVORITE,\n  payload: game\n});\n\nexport const unsetFavorite = game => ({\n  type: UNSET_FAVORITE,\n  payload: game\n});\n\nexport const showFullGameInfo = game => ({\n  type: SHOW_FULL_GAME_INFO,\n  payload: game\n});\n\nexport const closeFullGameInfo = () => ({\n  type: CLOSE_FULL_GAME_INFO\n});\n\nexport function getAllGames(query) {\n  return async function(dispatch) {\n    dispatch({ type: GET_ALL_GAMES_REQUEST });\n    FinderService.findAll(query)\n      .then(data => {\n        dispatch({\n          type: GET_ALL_GAMES_SUCCESS,\n          payload: data\n        });\n      })\n      .catch(err => {\n        dispatch({ type: GET_ALL_GAMES_FAILED, payload: err });\n      });\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Input } from \"antd\";\nimport { getAllGames } from \"../../redux/actions/games\";\nimport { setFindText } from \"../../redux/actions/general\";\n\nconst { Search } = Input;\n\nclass Finder extends React.Component {\n  onSearch = value => {\n    this.props.setFindText(value);\n    this.props.getAllGames({ search: value, page_size: \"36\" });\n  };\n\n  render() {\n    return (\n      <div className={\"place\"}>\n        <Search\n          placeholder=\"Enter game name here...\"\n          onSearch={this.onSearch}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ games }) => ({ games });\nconst mapDispatchToProps = {\n  getAllGames,\n  setFindText\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Finder);\n","import { SET_FIND_TEXT } from \"../actionsTypes/general\";\n\nexport function setFindText(text) {\n  return async function(dispatch) {\n    dispatch({\n      type: SET_FIND_TEXT,\n      payload: text\n    });\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, Card, Button, Icon, Modal, Carousel } from \"antd\";\nimport {\n  getAllGames,\n  setFavorite,\n  unsetFavorite,\n  showFullGameInfo,\n  closeFullGameInfo\n} from \"../../redux/actions/games\";\nimport WindowSize from \"get-window-size\";\n\nconst { Meta } = Card;\n\nclass Showcase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: Math.ceil(WindowSize().width / 450)\n    };\n  }\n\n  listenResizeEvent = () => {\n    console.log(\"changed\");\n    this.setState({\n      columns: Math.ceil(WindowSize().width / 450)\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.listenResizeEvent);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.listenResizeEvent);\n  }\n\n  handleOk = () => {\n    this.props.closeFullGameInfo();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <List\n          loading={this.props.games.gamesLoading}\n          grid={{\n            gutter: 16,\n            column: this.state.columns\n          }}\n          dataSource={this.props.source}\n          renderItem={item => (\n            <List.Item key={item.id}>\n              <Card\n                hoverable\n                style={{ width: \"100%\", overflow: \"hidden\" }}\n                cover={\n                  <img\n                    alt=\"example\"\n                    src={item.background_image}\n                    height={230}\n                    onClick={() => this.props.showFullGameInfo(item)}\n                  />\n                }\n              >\n                <Meta\n                  title={item.name}\n                  description={\"Release date: \" + item.released}\n                />\n                <br />\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-around\"\n                  }}\n                >\n                  <Button\n                    key=\"list-favorite\"\n                    onClick={() => {\n                      this.props.games.favoriteGames.indexOf(item) !== -1\n                        ? this.props.unsetFavorite(item)\n                        : this.props.setFavorite(item);\n                    }}\n                  >\n                    <Icon\n                      type={\"star\"}\n                      theme={\n                        this.props.games.favoriteGames.indexOf(item) !== -1\n                          ? \"filled\"\n                          : \"outlined\"\n                      }\n                    />\n                  </Button>\n                </div>\n              </Card>\n            </List.Item>\n          )}\n        />\n        {this.props.games.currentSelected ? (\n          <Modal\n            visible={this.props.games.isFullInfoShown}\n            title={this.props.games.currentSelected.name}\n            onOk={this.handleOk}\n            onCancel={this.handleOk}\n            width={\"50%\"}\n            footer={[\n              <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n                Ok\n              </Button>,\n              <Button\n                onClick={() => {\n                  this.props.games.favoriteGames.indexOf(\n                    this.props.games.currentSelected\n                  ) !== -1\n                    ? this.props.unsetFavorite(this.props.games.currentSelected)\n                    : this.props.setFavorite(this.props.games.currentSelected);\n                }}\n              >\n                <Icon\n                  type={\"star\"}\n                  theme={\n                    this.props.games.favoriteGames.indexOf(\n                      this.props.games.currentSelected\n                    ) !== -1\n                      ? \"filled\"\n                      : \"outlined\"\n                  }\n                />\n              </Button>\n            ]}\n          >\n            <div>\n              <img\n                alt={\"example\"}\n                src={this.props.games.currentSelected.background_image}\n                width={\"100%\"}\n                height={\"100%\"}\n              />\n            </div>\n            <p>\n              Rating: {this.props.games.currentSelected.rating}/\n              {this.props.games.currentSelected.rating_top}\n            </p>\n            <p>Metacritic: {this.props.games.currentSelected.metacritic}/100</p>\n            <p>\n              Platforms:{\" \"}\n              {this.props.games.currentSelected.platforms.map(item => {\n                return item.platform.name + \", \";\n              })}\n            </p>\n            <p>\n              Genres:{\" \"}\n              {this.props.games.currentSelected.genres.map(item => {\n                return item.name + \", \";\n              })}\n            </p>\n            <Carousel autoplay dotPosition={\"top\"} overflow={\"hidden\"}>\n              {this.props.games.currentSelected.short_screenshots.map(item => {\n                return <img alt={\"example\"} src={item.image} width={\"300\"} />;\n              })}\n            </Carousel>\n          </Modal>\n        ) : (\n          undefined\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ games }) => ({ games });\nconst mapDispatchToProps = {\n  getAllGames,\n  showFullGameInfo,\n  setFavorite,\n  closeFullGameInfo,\n  unsetFavorite\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Showcase);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Pagination } from \"antd\";\nimport { getAllGames } from \"../../redux/actions/games\";\n\nclass Showcase extends React.Component {\n  onPageChange = value => {\n    this.props.getAllGames({\n      page_size: \"36\",\n      page: value,\n      search: this.props.generals.currentlyFinding\n    });\n  };\n\n  render() {\n    return (\n      <Pagination\n        defaultCurrent={1}\n        onChange={this.onPageChange}\n        pageSize={36}\n        total={this.props.games.allGamesCount}\n        style={{ marginBottom: \"10px\" }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ games, generals }) => ({ games, generals });\nconst mapDispatchToProps = {\n  getAllGames\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Showcase);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport style from \"./style.module.scss\";\nimport Finder from \"../../components/finder/Finder\";\nimport Showcase from \"../../components/showcase/Showcase\";\nimport Pagination from \"../../components/pagination/Pagination\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport { showFullGameInfo } from \"../../redux/actions/games\";\n\nconst { Header, Content, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass SearchPage extends React.Component {\n  render() {\n    return (\n      <Layout className={style.container}>\n        <Sider breakpoint=\"xl\" collapsedWidth=\"0\">\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"user\" />\n              <span>Main</span>\n            </Menu.Item>\n            <SubMenu\n              title={\n                <span>\n                  <Icon type=\"star\" theme={\"filled\"} />\n                  <span>My favorites</span>\n                </span>\n              }\n            >\n              {this.props.games.favoriteGames !== []\n                ? this.props.games.favoriteGames.map(item => {\n                    return (\n                      <Menu.Item\n                        key={item.id}\n                        onClick={() => this.props.showFullGameInfo(item)}\n                      >\n                        {item.name}\n                      </Menu.Item>\n                    );\n                  })\n                : undefined}\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header className={style.header}>\n            <Finder className={style.finder} />\n          </Header>\n          <Content style={{ margin: \"24px 16px 0\" }}>\n            <Showcase source={this.props.games.parsedGamesList} />\n            <Pagination />\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = ({ games }) => ({ games });\nconst mapDispatchToProps = {\n  showFullGameInfo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PageWrapper from \"../src/containers/pageWrapper/PageWrapper\";\nimport NotFound from \"./views/404/404\";\nimport SearchPage from \"./views/searchPage/SearchPage\";\nimport { getAllGames } from \"./redux/actions/games\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getAllGames({ page_size: \"36\" });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <PageWrapper\n                {...props}\n                title=\"Game finder\"\n                component={SearchPage}\n              />\n            )}\n          />\n          <Route\n            path=\"*\"\n            render={props => (\n              <PageWrapper {...props} title=\"Error?\" component={NotFound} />\n            )}\n          />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ games }) => ({ games });\nconst mapDispatchToProps = {\n  getAllGames\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport history from \"./helpers/history\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__XoHml\",\"logo\":\"style_logo__26mrL\",\"header\":\"style_header__2FtH5\"};"],"sourceRoot":""}